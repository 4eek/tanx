apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: tanx
  labels:
    run: tanx
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  selector:
    matchLabels:
      run: tanx
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        run: tanx
    spec:
      containers:
      - env:
        - name: PORT
          value: "8080"
        - name: REPLACE_OS_VARS
          value: "true"
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        image: nginx:latest
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            httpGet:
              path: /k8s/pre-stop
              port: 8080
              scheme: HTTP
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /k8s/live
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: tanx
        ports:
        - containerPort: 8080
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /k8s/ready
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: tanx
  labels:
    run: tanx
  namespace: default
spec:
  externalTrafficPolicy: Cluster
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    run: tanx
  sessionAffinity: None
  type: LoadBalancer
